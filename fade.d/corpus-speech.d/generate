#!/bin/bash
#
# This script generates a matrix sentence corpus
#
# Copyright (C) 2014-2018 Marc René Schädler

# Get the directory this script is stored in and its name
DIR=$(cd "$( dirname "$0" )" && pwd)
SCN=$(basename "$0")

# Load configuration file
CGF="${DIR}/${SCN}.cfg"
[ -f "${CGF}" ] && source "${CGF}"

# Load additional scripts from sub-script directory
SSD="${DIR}/${SCN}.d"
[ -d "${SSD}" ] && PATH="${PATH}:${SSD}"

# Working directory is the current directory
WKD="${PWD}"

# Corpus source directory
CSD="${WKD}/source"

# Corpus directory
COD="${WKD}/corpus"

# Check if generation config file exists
if [ -z "${TRAIN_SAMPELS}" ]; then
  echo "train samples not defined"
  exit 1
elif [ -z "${TEST_SAMPELS}" ]; then
  echo "test samples not defined"
  exit 1
elif [ -z "${TRAIN_SNRS}" ]; then
  echo "Training SNRs not defined"
  exit 1
elif [ -z "${TEST_SNRS}" ]; then
  echo "Testing SNRs not defined"
  exit 1
elif [ -z "${SIL}" ]; then
  echo "Start/end silence not defined"
  exit 1
fi

# Check that speech and noise data exists
NUM_SPEECH_FILES=$(find -L "${CSD}/speech" -type f -iname '*.wav' | wc -l)
NUM_NOISE_FILES=$(find -L "${CSD}/noise" -type f -iname '*.wav' | wc -l)
if [ $NUM_SPEECH_FILES -lt 1 ]; then
  echo "no speech files found in '${CSD}/speech'"
  exit 1
fi
if [ $NUM_NOISE_FILES -lt 1 ]; then
  echo "no noise files found in '${CSD}/noise'"
  exit 1
fi

# Clear target directory
[ -d "${COD}" ] && rm -r "${COD}"
mkdir -p "${COD}"

# Default to one block
if [ -z "$PARALLEL_CORPUS" ]; then
  PARALLEL_CORPUS=1
fi

# Generate training and testing data
echo "perform corpus generation in (max) ${PARALLEL_CORPUS} blocks"
mkdir -p "${COD}/train"
mkdir -p "${COD}/test"
if [ $PARALLEL_CORPUS -gt 1 ]; then
  echo "disable verbose ouput because multiple threads will be used"
  VERBOSE=0
else
  VERBOSE=1
fi
for ((I=1;$I<$[${PARALLEL_CORPUS}+1];I++)); do
  (echo "mixsnr('${CSD}/speech', '${CSD}/noise', '${CSD}/hrir-speech', '${CSD}/hrir-noise', '${COD}/train', ${TRAIN_SNRS}, ${TRAIN_SAMPELS}, ${SIL}, ${I}, ${VERBOSE}); mixsnr('${CSD}/speech', '${CSD}/noise', '${CSD}/hrir-speech', '${CSD}/hrir-noise', '${COD}/test', ${TEST_SNRS}, ${TEST_SAMPELS}, ${SIL}, ${PARALLEL_CORPUS}+${I}, ${VERBOSE});" | run-matlab "mixing") &
done

wait || exit 1

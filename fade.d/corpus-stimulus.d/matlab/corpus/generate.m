function generate(target_dir, samples, seed, verbose)

mkdir(target_dir);
classes = {0 1};

% Tone-in-noise detection
funname = 'TIN';
offsets = -18:3:21;
generate_conditions(target_dir, funname, classes, ...
  num2cell(66+offsets), samples, {0.005}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(57+offsets), samples, {0.015}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(57+offsets), samples, {0.020}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(54+offsets), samples, {0.035}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(54+offsets), samples, {0.050}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(51+offsets), samples, {0.100}, seed, verbose);
generate_conditions(target_dir, funname, classes, ...
  num2cell(48+offsets), samples, {0.200}, seed, verbose);

%% Tone-in-broadband-noise detection
%funname = 'TIBN';
%offsets = -30:5:20;
%conditions = { '500,5', '1000,5', '2000,5', '4000,5' };
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(45+offsets), samples, conditions, seed, verbose);
%conditions = { '500,15', '1000,15', '2000,15', '4000,15' };
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(55+offsets), samples, conditions, seed, verbose);
%conditions = { '500,25', '1000,25', '2000,25', '4000,25' };
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(65+offsets), samples, conditions, seed, verbose);
%conditions = { '500,35', '1000,35', '2000,35', '4000,35' };
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(75+offsets), samples, conditions, seed, verbose);
%conditions = { '500,45', '1000,45', '2000,45', '4000,45' };
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(85+offsets), samples, conditions, seed, verbose);

%% Pure-tone audiogram
%funname = 'PTA';
%parameters = num2cell(-20:10:110);
%conditions = {250 500 1000 2000 4000 8000};
%generate_conditions(target_dir, funname, classes, parameters, samples, conditions, seed, verbose);

%% Notched-noise filter bandwidth
%funname = 'NFB';
%offsets = -18:3:21;
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(57+offsets), samples, {'1000,0.00'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(51+offsets), samples, {'1000,0.05'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(48+offsets), samples, {'1000,0.10'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(42+offsets), samples, {'1000,0.15'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(36+offsets), samples, {'1000,0.20'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(24+offsets), samples, {'1000,0.30'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(18+offsets), samples, {'1000,0.40'}, seed, verbose);

%% Spectral masking Tone/Noise-in-Noise
%funname = 'SM';
%offsets = -18:3:21;
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(6+offsets), samples, {'45,750'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(21+offsets), samples, {'45,900'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(39+offsets), samples, {'45,1000'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(21+offsets), samples, {'45,1100'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(6+offsets), samples, {'45,1250'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(3+offsets), samples, {'45,1500'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(27+offsets), samples, {'85,750'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(57+offsets), samples, {'85,900'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(75+offsets), samples, {'85,1000'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(63+offsets), samples, {'85,1100'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(51+offsets), samples, {'85,1250'}, seed, verbose);
%generate_conditions(target_dir, funname, classes, ...
%  num2cell(45+offsets), samples, {'85,1500'}, seed, verbose);

%% Sweep detection test
%classes = {2 3};
%funname = 'STD';
%parameters = num2cell(55:5:90);
%conditions = { ...
%  '0,120,30,50,0.1,noise,65,200,500'...
%  '0,120,30,50,0.1,noise,65,200,1000'...
%  '0,120,30,50,0.1,noise,65,200,2000'...
%  '0,120,30,50,0.1,noise,65,200,4000'...
%  '0,120,30,50,0.1,noise,65,200,6000'...
%  };
%generate_conditions(target_dir, funname, classes, parameters, samples, conditions, seed, verbose);

%% Sweep discrimination test
%classes = {0 1};
%funname = 'STD';
%parameters = num2cell(55:5:90);
%conditions = { ...
%  '0,120,30,50,0.1,noise,65,200,500'...
%  '0,120,30,50,0.1,noise,65,200,1000'...
%  '0,120,30,50,0.1,noise,65,200,2000'...
%  '0,120,30,50,0.1,noise,65,200,4000'...
%  '0,120,30,50,0.1,noise,65,200,6000'...
%  };
%generate_conditions(target_dir, funname, classes, parameters, samples, conditions, seed, verbose);

%funname = 'BMLDMN';
%offsets = -36:6:12;
%conditions = { ...
%  '25,1,1,125' '25,1,1,250' '25,1,1,500' '25,1,1,1000' '25,1,1,2000' '25,1,1,4000' ...
%  };

%generate_conditions(target_dir, funname, classes, num2cell(65+offsets), samples, conditions, seed, verbose);


end
